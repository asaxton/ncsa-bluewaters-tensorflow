#!/bin/bash
#PBS -l nodes=8:ppn=16:xk
#PBS -l walltime=48:00:00
#PBS -N horovod_distributed_train_non_shifter
#PBS -A banw
#PBS -l gres=shifter16
#PBS -e logs/log.${PBS_JOBNAME}_NN_${PBS_NUM_NODES}_${PBS_JOBID}.err
#PBS -o logs/log.${PBS_JOBNAME}_NN_${PBS_NUM_NODES}_${PBS_JOBID}.out

# NOTE: lines that begin with "#PBS" are not interpreted by the shell but ARE 
# used by the batch system, wheras lines that begin with multiple # signs, 
# like "##PBS" are considered "commented out" by the batch system 
# and have no effect.  

# If you launched the job in a directory prepared for the job to run within, 
# you'll want to cd to that directory
# [uncomment the following line to enable this]
cd $PBS_O_WORKDIR

# Alternatively, the job script can create its own job-ID-unique directory 
# to run within.  In that case you'll need to create and populate that 
# directory with executables and perhaps inputs
# [uncomment and customize the following lines to enable this behavior] 
# mkdir -p /scratch/sciteam/$USER/$PBS_JOBID
# cd /scratch/sciteam/$USER/$PBS_JOBID
# cp /scratch/job/setup/directory/* .

# To add certain modules that you do not have added via ~/.modules 
#. /opt/modules/default/init/bash
#module load craype-hugepages2M  perftools

### launch the application
### redirecting stdin and stdout if needed
### NOTE: (the "in" file must exist for input)

#export CRAY_CUDA_MPS=1
#export CUDA_VISIBLE_DEVICES=-1
#export OMP_NUM_THREADS=4
echo "Starting"
mkdir -p logs

PROJ_DIR='/mnt/a/u/staff/saxton/Development/bw_tf_dev_0.0.1/ncsa-bluewaters-tensorflow'
WORK_DIR='/mnt/b/projects/sciteam/banw/tensorflow'

export NUM_STEPS=300000
DATA_DIR="/mnt/c/scratch/staff/saxton/ImageNet2/tf_records/train" #"${HOME}/scratch/ImageNet2/tf_records"

BATCH_SIZE=32

export MPICH_MAX_THREAD_SAFETY=multiple
#NODES_USED=2
for NODES_USED in $((PBS_NUM_NODES - 6)) $((PBS_NUM_NODES - 5)) $((PBS_NUM_NODES - 4)) $((PBS_NUM_NODES - 3)) $((PBS_NUM_NODES - 2)); do

RUN_CMD="python ../BWDistributedTrain/inception_imagenet_horovod_distributed_train.py \
--data_dir /data_dir \
--num_steps $NUM_STEPS \
--num_train_examples 385455 \
--batch_size ${BATCH_SIZE} \
--initial_learning_rate 0.1 \
--checkpoint_dir /checkpoints/checkpoint_dir_${PBS_JOBNAME}_NU_${NODES_USED}_${PBS_JOBID}"

aprun -cc none -n ${NODES_USED} -d 16 -N 1 -b -- bash -c "source /work/tf/bin/activate; export LD_LIBRARY_PATH=${LD_LIBRARY_PATH} ; ${RUN_CMD}"

if [ $? -eq 0 ] ; then break ; fi
done

echo "Done, Thank you for flying."

